//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ITSDataModel", "BaseObjectReferences", "BaseObjectReferenceRole", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Luminis.Its.Services.Data.BaseObject), "BackReferencesRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Luminis.Its.Services.Data.BaseObject))]
[assembly: EdmRelationshipAttribute("ITSDataModel", "BaseObjectValueReferences", "BaseObjectValueReferenceRole", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Luminis.Its.Services.Data.BaseObjectValue), "BackReferencesRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Luminis.Its.Services.Data.BaseObjectValue))]
[assembly: EdmRelationshipAttribute("ITSDataModel", "BaseObjectRelation1", "BaseObjectRelation1Role", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Luminis.Its.Services.Data.BaseObject), "BackRelations1Role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Luminis.Its.Services.Data.BaseObject))]
[assembly: EdmRelationshipAttribute("ITSDataModel", "BaseObjectRelation2", "BaseObjectRelation2Role", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Luminis.Its.Services.Data.BaseObject), "BackRelations2Role", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Luminis.Its.Services.Data.BaseObject))]
[assembly: EdmRelationshipAttribute("ITSDataModel", "BaseObjectBaseObjectValues", "BaseObjectRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Luminis.Its.Services.Data.BaseObject), "BaseObjectValuesRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Luminis.Its.Services.Data.BaseObjectValue))]
[assembly: EdmRelationshipAttribute("ITSDataModel", "BaseObjectTypeBaseObject", "BaseObjectType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Luminis.Its.Services.Data.BaseObjectType), "BaseObjects", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Luminis.Its.Services.Data.BaseObject))]
[assembly: EdmRelationshipAttribute("ITSDataModel", "FK_ObjectJournal_Object", "BaseObject", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Luminis.Its.Services.Data.BaseObject), "ObjectJournal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Luminis.Its.Services.Data.BaseObjectJournal))]
[assembly: EdmRelationshipAttribute("ITSDataModel", "FK_ObjectJournal_ObjectValueAfter", "BaseObjectValue", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Luminis.Its.Services.Data.BaseObjectValue), "ObjectJournal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Luminis.Its.Services.Data.BaseObjectJournal))]
[assembly: EdmRelationshipAttribute("ITSDataModel", "FK_ObjectJournal_ObjectValueBefore", "BaseObjectValue", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Luminis.Its.Services.Data.BaseObjectValue), "ObjectJournal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Luminis.Its.Services.Data.BaseObjectJournal))]

#endregion

namespace Luminis.Its.Services.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ItsDb : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ItsDb object using the connection string found in the 'ItsDb' section of the application configuration file.
        /// </summary>
        public ItsDb() : base("name=ItsDb", "ItsDb")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ItsDb object.
        /// </summary>
        public ItsDb(string connectionString) : base(connectionString, "ItsDb")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ItsDb object.
        /// </summary>
        public ItsDb(EntityConnection connection) : base(connection, "ItsDb")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BaseObject> BaseObjectSet
        {
            get
            {
                if ((_BaseObjectSet == null))
                {
                    _BaseObjectSet = base.CreateObjectSet<BaseObject>("BaseObjectSet");
                }
                return _BaseObjectSet;
            }
        }
        private ObjectSet<BaseObject> _BaseObjectSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BaseObjectValue> BaseObjectValueSet
        {
            get
            {
                if ((_BaseObjectValueSet == null))
                {
                    _BaseObjectValueSet = base.CreateObjectSet<BaseObjectValue>("BaseObjectValueSet");
                }
                return _BaseObjectValueSet;
            }
        }
        private ObjectSet<BaseObjectValue> _BaseObjectValueSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BaseObjectType> BaseObjectTypeSet
        {
            get
            {
                if ((_BaseObjectTypeSet == null))
                {
                    _BaseObjectTypeSet = base.CreateObjectSet<BaseObjectType>("BaseObjectTypeSet");
                }
                return _BaseObjectTypeSet;
            }
        }
        private ObjectSet<BaseObjectType> _BaseObjectTypeSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BaseObjectJournal> BaseObjectJournalSet
        {
            get
            {
                if ((_BaseObjectJournalSet == null))
                {
                    _BaseObjectJournalSet = base.CreateObjectSet<BaseObjectJournal>("BaseObjectJournalSet");
                }
                return _BaseObjectJournalSet;
            }
        }
        private ObjectSet<BaseObjectJournal> _BaseObjectJournalSet;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BaseObjectSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBaseObjectSet(BaseObject baseObject)
        {
            base.AddObject("BaseObjectSet", baseObject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BaseObjectValueSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBaseObjectValueSet(BaseObjectValue baseObjectValue)
        {
            base.AddObject("BaseObjectValueSet", baseObjectValue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BaseObjectTypeSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBaseObjectTypeSet(BaseObjectType baseObjectType)
        {
            base.AddObject("BaseObjectTypeSet", baseObjectType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BaseObjectJournalSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBaseObjectJournalSet(BaseObjectJournal baseObjectJournal)
        {
            base.AddObject("BaseObjectJournalSet", baseObjectJournal);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ITSDataModel", Name="BaseObject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BaseObject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BaseObject object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="extId">Initial value of the ExtId property.</param>
        public static BaseObject CreateBaseObject(global::System.Guid id, global::System.String extId)
        {
            BaseObject baseObject = new BaseObject();
            baseObject.Id = id;
            baseObject.ExtId = extId;
            return baseObject;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExtId
        {
            get
            {
                return _ExtId;
            }
            set
            {
                OnExtIdChanging(value);
                ReportPropertyChanging("ExtId");
                _ExtId = StructuralObject.SetValidValue(value, false, "ExtId");
                ReportPropertyChanged("ExtId");
                OnExtIdChanged();
            }
        }
        private global::System.String _ExtId;
        partial void OnExtIdChanging(global::System.String value);
        partial void OnExtIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ITSDataModel", "BaseObjectReferences", "BackReferencesRole")]
        public EntityCollection<BaseObject> BackReferences
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BaseObject>("ITSDataModel.BaseObjectReferences", "BackReferencesRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BaseObject>("ITSDataModel.BaseObjectReferences", "BackReferencesRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ITSDataModel", "BaseObjectReferences", "BaseObjectReferenceRole")]
        public BaseObject BaseObjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseObject>("ITSDataModel.BaseObjectReferences", "BaseObjectReferenceRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseObject>("ITSDataModel.BaseObjectReferences", "BaseObjectReferenceRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BaseObject> BaseObjectReferenceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseObject>("ITSDataModel.BaseObjectReferences", "BaseObjectReferenceRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BaseObject>("ITSDataModel.BaseObjectReferences", "BaseObjectReferenceRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ITSDataModel", "BaseObjectRelation1", "BackRelations1Role")]
        public EntityCollection<BaseObject> BackRelations1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BaseObject>("ITSDataModel.BaseObjectRelation1", "BackRelations1Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BaseObject>("ITSDataModel.BaseObjectRelation1", "BackRelations1Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ITSDataModel", "BaseObjectRelation1", "BaseObjectRelation1Role")]
        public BaseObject BaseObjectRelation1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseObject>("ITSDataModel.BaseObjectRelation1", "BaseObjectRelation1Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseObject>("ITSDataModel.BaseObjectRelation1", "BaseObjectRelation1Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BaseObject> BaseObjectRelation1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseObject>("ITSDataModel.BaseObjectRelation1", "BaseObjectRelation1Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BaseObject>("ITSDataModel.BaseObjectRelation1", "BaseObjectRelation1Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ITSDataModel", "BaseObjectRelation2", "BackRelations2Role")]
        public EntityCollection<BaseObject> BackRelations2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BaseObject>("ITSDataModel.BaseObjectRelation2", "BackRelations2Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BaseObject>("ITSDataModel.BaseObjectRelation2", "BackRelations2Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ITSDataModel", "BaseObjectRelation2", "BaseObjectRelation2Role")]
        public BaseObject BaseObjectRelation2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseObject>("ITSDataModel.BaseObjectRelation2", "BaseObjectRelation2Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseObject>("ITSDataModel.BaseObjectRelation2", "BaseObjectRelation2Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BaseObject> BaseObjectRelation2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseObject>("ITSDataModel.BaseObjectRelation2", "BaseObjectRelation2Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BaseObject>("ITSDataModel.BaseObjectRelation2", "BaseObjectRelation2Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ITSDataModel", "BaseObjectBaseObjectValues", "BaseObjectValuesRole")]
        public EntityCollection<BaseObjectValue> BaseObjectValues
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BaseObjectValue>("ITSDataModel.BaseObjectBaseObjectValues", "BaseObjectValuesRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BaseObjectValue>("ITSDataModel.BaseObjectBaseObjectValues", "BaseObjectValuesRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ITSDataModel", "BaseObjectTypeBaseObject", "BaseObjectType")]
        public BaseObjectType BaseObjectType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseObjectType>("ITSDataModel.BaseObjectTypeBaseObject", "BaseObjectType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseObjectType>("ITSDataModel.BaseObjectTypeBaseObject", "BaseObjectType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BaseObjectType> BaseObjectTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseObjectType>("ITSDataModel.BaseObjectTypeBaseObject", "BaseObjectType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BaseObjectType>("ITSDataModel.BaseObjectTypeBaseObject", "BaseObjectType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ITSDataModel", "FK_ObjectJournal_Object", "ObjectJournal")]
        public EntityCollection<BaseObjectJournal> BaseObjectJournal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BaseObjectJournal>("ITSDataModel.FK_ObjectJournal_Object", "ObjectJournal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BaseObjectJournal>("ITSDataModel.FK_ObjectJournal_Object", "ObjectJournal", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ITSDataModel", Name="BaseObjectJournal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BaseObjectJournal : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BaseObjectJournal object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="timestamp">Initial value of the Timestamp property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        public static BaseObjectJournal CreateBaseObjectJournal(global::System.Int32 id, global::System.DateTime timestamp, global::System.String username)
        {
            BaseObjectJournal baseObjectJournal = new BaseObjectJournal();
            baseObjectJournal.Id = id;
            baseObjectJournal.Timestamp = timestamp;
            baseObjectJournal.Username = username;
            return baseObjectJournal;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Timestamp
        {
            get
            {
                return _Timestamp;
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, "Timestamp");
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.DateTime _Timestamp;
        partial void OnTimestampChanging(global::System.DateTime value);
        partial void OnTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false, "Username");
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ITSDataModel", "FK_ObjectJournal_Object", "BaseObject")]
        public BaseObject BaseObject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseObject>("ITSDataModel.FK_ObjectJournal_Object", "BaseObject").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseObject>("ITSDataModel.FK_ObjectJournal_Object", "BaseObject").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BaseObject> BaseObjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseObject>("ITSDataModel.FK_ObjectJournal_Object", "BaseObject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BaseObject>("ITSDataModel.FK_ObjectJournal_Object", "BaseObject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ITSDataModel", "FK_ObjectJournal_ObjectValueAfter", "BaseObjectValue")]
        public BaseObjectValue BaseObjectValueBefore
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseObjectValue>("ITSDataModel.FK_ObjectJournal_ObjectValueAfter", "BaseObjectValue").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseObjectValue>("ITSDataModel.FK_ObjectJournal_ObjectValueAfter", "BaseObjectValue").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BaseObjectValue> BaseObjectValueBeforeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseObjectValue>("ITSDataModel.FK_ObjectJournal_ObjectValueAfter", "BaseObjectValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BaseObjectValue>("ITSDataModel.FK_ObjectJournal_ObjectValueAfter", "BaseObjectValue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ITSDataModel", "FK_ObjectJournal_ObjectValueBefore", "BaseObjectValue")]
        public BaseObjectValue BaseObjectValueAfter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseObjectValue>("ITSDataModel.FK_ObjectJournal_ObjectValueBefore", "BaseObjectValue").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseObjectValue>("ITSDataModel.FK_ObjectJournal_ObjectValueBefore", "BaseObjectValue").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BaseObjectValue> BaseObjectValueAfterReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseObjectValue>("ITSDataModel.FK_ObjectJournal_ObjectValueBefore", "BaseObjectValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BaseObjectValue>("ITSDataModel.FK_ObjectJournal_ObjectValueBefore", "BaseObjectValue", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ITSDataModel", Name="BaseObjectType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BaseObjectType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BaseObjectType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static BaseObjectType CreateBaseObjectType(global::System.Int32 id, global::System.String name)
        {
            BaseObjectType baseObjectType = new BaseObjectType();
            baseObjectType.Id = id;
            baseObjectType.Name = name;
            return baseObjectType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RelativeUri
        {
            get
            {
                return _RelativeUri;
            }
            set
            {
                OnRelativeUriChanging(value);
                ReportPropertyChanging("RelativeUri");
                _RelativeUri = StructuralObject.SetValidValue(value, true, "RelativeUri");
                ReportPropertyChanged("RelativeUri");
                OnRelativeUriChanged();
            }
        }
        private global::System.String _RelativeUri;
        partial void OnRelativeUriChanging(global::System.String value);
        partial void OnRelativeUriChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ITSDataModel", "BaseObjectTypeBaseObject", "BaseObjects")]
        public EntityCollection<BaseObject> BaseObjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BaseObject>("ITSDataModel.BaseObjectTypeBaseObject", "BaseObjects");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BaseObject>("ITSDataModel.BaseObjectTypeBaseObject", "BaseObjects", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ITSDataModel", Name="BaseObjectValue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BaseObjectValue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BaseObjectValue object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        /// <param name="contentType">Initial value of the ContentType property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        public static BaseObjectValue CreateBaseObjectValue(global::System.Guid id, global::System.DateTime startDate, global::System.DateTime endDate, global::System.String contentType, global::System.Int32 version)
        {
            BaseObjectValue baseObjectValue = new BaseObjectValue();
            baseObjectValue.Id = id;
            baseObjectValue.StartDate = startDate;
            baseObjectValue.EndDate = endDate;
            baseObjectValue.ContentType = contentType;
            baseObjectValue.Version = version;
            return baseObjectValue;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value, "StartDate");
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value, "EndDate");
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContentType
        {
            get
            {
                return _ContentType;
            }
            set
            {
                OnContentTypeChanging(value);
                ReportPropertyChanging("ContentType");
                _ContentType = StructuralObject.SetValidValue(value, false, "ContentType");
                ReportPropertyChanged("ContentType");
                OnContentTypeChanged();
            }
        }
        private global::System.String _ContentType;
        partial void OnContentTypeChanging(global::System.String value);
        partial void OnContentTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Content
        {
            get
            {
                return StructuralObject.GetValidValue(_Content);
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, true, "Content");
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.Byte[] _Content;
        partial void OnContentChanging(global::System.Byte[] value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, "Version");
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Int32 _Version;
        partial void OnVersionChanging(global::System.Int32 value);
        partial void OnVersionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ITSDataModel", "BaseObjectValueReferences", "BackReferencesRole")]
        public EntityCollection<BaseObjectValue> BackReferences
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BaseObjectValue>("ITSDataModel.BaseObjectValueReferences", "BackReferencesRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BaseObjectValue>("ITSDataModel.BaseObjectValueReferences", "BackReferencesRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ITSDataModel", "BaseObjectValueReferences", "BaseObjectValueReferenceRole")]
        public BaseObjectValue BaseObjectValueReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseObjectValue>("ITSDataModel.BaseObjectValueReferences", "BaseObjectValueReferenceRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseObjectValue>("ITSDataModel.BaseObjectValueReferences", "BaseObjectValueReferenceRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BaseObjectValue> BaseObjectValueReferenceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseObjectValue>("ITSDataModel.BaseObjectValueReferences", "BaseObjectValueReferenceRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BaseObjectValue>("ITSDataModel.BaseObjectValueReferences", "BaseObjectValueReferenceRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ITSDataModel", "BaseObjectBaseObjectValues", "BaseObjectRole")]
        public BaseObject ParentBaseObject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseObject>("ITSDataModel.BaseObjectBaseObjectValues", "BaseObjectRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseObject>("ITSDataModel.BaseObjectBaseObjectValues", "BaseObjectRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BaseObject> ParentBaseObjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseObject>("ITSDataModel.BaseObjectBaseObjectValues", "BaseObjectRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BaseObject>("ITSDataModel.BaseObjectBaseObjectValues", "BaseObjectRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ITSDataModel", "FK_ObjectJournal_ObjectValueAfter", "ObjectJournal")]
        public EntityCollection<BaseObjectJournal> BaseObjectBeforeJournals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BaseObjectJournal>("ITSDataModel.FK_ObjectJournal_ObjectValueAfter", "ObjectJournal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BaseObjectJournal>("ITSDataModel.FK_ObjectJournal_ObjectValueAfter", "ObjectJournal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ITSDataModel", "FK_ObjectJournal_ObjectValueBefore", "ObjectJournal")]
        public EntityCollection<BaseObjectJournal> BaseObjectAfterJournals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BaseObjectJournal>("ITSDataModel.FK_ObjectJournal_ObjectValueBefore", "ObjectJournal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BaseObjectJournal>("ITSDataModel.FK_ObjectJournal_ObjectValueBefore", "ObjectJournal", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
