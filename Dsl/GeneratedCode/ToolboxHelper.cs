//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
using DslDiagrams = global::Microsoft.VisualStudio.Modeling.Diagrams;

namespace Luminis.Its.Workbench
{
	/// <summary>
	/// Helper class used to create and initialize toolbox items for this DSL.
	/// </summary>
	/// <remarks>
	/// Double-derived class to allow easier code customization.
	/// </remarks>
	public partial class WorkbenchToolboxHelper : WorkbenchToolboxHelperBase 
	{
		/// <summary>
		/// Constructs a new WorkbenchToolboxHelper.
		/// </summary>
		public WorkbenchToolboxHelper(global::System.IServiceProvider serviceProvider)
			: base(serviceProvider) { }
	}
	
	/// <summary>
	/// Helper class used to create and initialize toolbox items for this DSL.
	/// </summary>
	public abstract class WorkbenchToolboxHelperBase
	{
		/// <summary>
		/// Toolbox item filter string used to identify Workbench toolbox items.  
		/// </summary>
		/// <remarks>
		/// See the MSDN documentation for the ToolboxItemFilterAttribute class for more information on toolbox
		/// item filters.
		/// </remarks>
		public const string ToolboxFilterString = "Workbench.1.0";
		/// <summary>
		/// Toolbox item filter string used to identify CommentsReferenceTypes connector tool.
		/// </summary>
		public const string CommentsReferenceTypesFilterString = "CommentsReferenceTypes.1.0";
		/// <summary>
		/// Toolbox item filter string used to identify ModelComplexTypeConnector connector tool.
		/// </summary>
		public const string ModelComplexTypeConnectorFilterString = "ModelComplexTypeConnector.1.0";
		/// <summary>
		/// Toolbox item filter string used to identify EntityRelationConnector connector tool.
		/// </summary>
		public const string EntityRelationConnectorFilterString = "EntityRelationConnector.1.0";
		/// <summary>
		/// Toolbox item filter string used to identify RelationEntityConnector connector tool.
		/// </summary>
		public const string RelationEntityConnectorFilterString = "RelationEntityConnector.1.0";

		private global::System.IServiceProvider sp;
		
		/// <summary>
		/// Constructs a new WorkbenchToolboxHelperBase.
		/// </summary>
		protected WorkbenchToolboxHelperBase(global::System.IServiceProvider serviceProvider)
		{
			if(serviceProvider == null) throw new global::System.ArgumentNullException("serviceProvider");
			
			this.sp = serviceProvider;
		}
		
		/// <summary>
		/// Serivce provider used to access services from the hosting environment.
		/// </summary>
		protected global::System.IServiceProvider ServiceProvider
		{
			get
			{
				return this.sp;
			}
		}

		/// <summary>
		/// Returns the display name of the tab that should be opened by default when the editor is opened.
		/// </summary>
		public static string DefaultToolboxTabName
		{
			get
			{
				return global::Luminis.Its.Workbench.WorkbenchDomainModel.SingletonResourceManager.GetString("Class DiagramsToolboxTab", global::System.Globalization.CultureInfo.CurrentUICulture);
			}
		}
		
		
		/// <summary>
		/// Returns the toolbox items count in the default tool box tab.
		/// </summary>
		public static int DefaultToolboxTabToolboxItemsCount
		{
			get
			{
				return 9;
			}
		}
		

		/// <summary>
		/// Returns a list of toolbox items for use with this DSL.
		/// </summary>
		public virtual global::System.Collections.Generic.IList<DslDesign::ModelingToolboxItem> CreateToolboxItems()
		{
			global::System.Collections.Generic.List<DslDesign::ModelingToolboxItem> toolboxItems = new global::System.Collections.Generic.List<DslDesign::ModelingToolboxItem>();
			
			// Create store and load domain models.
			using(DslModeling::Store store = new DslModeling::Store(this.ServiceProvider))
			{
				store.LoadDomainModels(typeof(DslDiagrams::CoreDesignSurfaceDomainModel),
					typeof(global::Luminis.Its.Workbench.WorkbenchDomainModel));
				global::System.Resources.ResourceManager resourceManager = global::Luminis.Its.Workbench.WorkbenchDomainModel.SingletonResourceManager;
				global::System.Globalization.CultureInfo resourceCulture = global::System.Globalization.CultureInfo.CurrentUICulture;
			
				// Open transaction so we can create model elements corresponding to toolbox items.
				using(DslModeling::Transaction t = store.TransactionManager.BeginTransaction("CreateToolboxItems"))
				{

					// Add Attribute shape tool.
					toolboxItems.Add(new DslDesign::ModelingToolboxItem(
						"AttributeToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						1, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("AttributeToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("AttributeToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.
						"Class DiagramsToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("Class DiagramsToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"AttributeF1Keyword", // F1 help keyword for the toolbox item.
						resourceManager.GetString("AttributeToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						CreateElementToolPrototype(store, global::Luminis.Its.Workbench.ModelAttribute.DomainClassId), // ElementGroupPrototype (data object) representing model element on the toolbox.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require) 
						}));

					// Add Comment shape tool.
					toolboxItems.Add(new DslDesign::ModelingToolboxItem(
						"CommentToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						2, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("CommentToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("CommentToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.
						"Class DiagramsToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("Class DiagramsToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"CommentF1Keyword", // F1 help keyword for the toolbox item.
						resourceManager.GetString("CommentToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						CreateElementToolPrototype(store, global::Luminis.Its.Workbench.Comment.DomainClassId), // ElementGroupPrototype (data object) representing model element on the toolbox.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require) 
						}));

					// Add CommentsReferenceTypes connector tool.
					toolboxItems.Add(new DslDesign::ModelingToolboxItem(
						"CommentsReferenceTypesToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						3, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("CommentsReferenceTypesToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("CommentsReferenceTypesToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.				
						"Class DiagramsToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("Class DiagramsToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"CommentsReferenceTypesF1Keyword", // F1 help keyword for the toolbox item.
						resourceManager.GetString("CommentsReferenceTypesToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						null, // Connector toolbox items do not have an underlying data object.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require), 
							new global::System.ComponentModel.ToolboxItemFilterAttribute(CommentsReferenceTypesFilterString)
						}));

					// Add ModelRelation shape tool.
					toolboxItems.Add(new DslDesign::ModelingToolboxItem(
						"ModelRelationToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						4, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("ModelRelationToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("ModelRelationToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.
						"Class DiagramsToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("Class DiagramsToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"ModelRelation", // F1 help keyword for the toolbox item.
						resourceManager.GetString("ModelRelationToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						CreateElementToolPrototype(store, global::Luminis.Its.Workbench.ModelRelation.DomainClassId), // ElementGroupPrototype (data object) representing model element on the toolbox.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require) 
						}));

					// Add ModelComplexType shape tool.
					toolboxItems.Add(new DslDesign::ModelingToolboxItem(
						"ModelComplexTypeToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						5, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("ModelComplexTypeToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("ModelComplexTypeToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.
						"Class DiagramsToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("Class DiagramsToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"ModelComplexType", // F1 help keyword for the toolbox item.
						resourceManager.GetString("ModelComplexTypeToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						CreateElementToolPrototype(store, global::Luminis.Its.Workbench.ModelComplexType.DomainClassId), // ElementGroupPrototype (data object) representing model element on the toolbox.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require) 
						}));

					// Add ModelComplexTypeConnector connector tool.
					toolboxItems.Add(new DslDesign::ModelingToolboxItem(
						"ModelComplexTypeConnectorToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						6, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("ModelComplexTypeConnectorToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("ModelComplexTypeConnectorToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.				
						"Class DiagramsToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("Class DiagramsToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"ModelComplexTypeConnector", // F1 help keyword for the toolbox item.
						resourceManager.GetString("ModelComplexTypeConnectorToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						null, // Connector toolbox items do not have an underlying data object.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require), 
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ModelComplexTypeConnectorFilterString)
						}));

					// Add ModelEntityTool shape tool.
					toolboxItems.Add(new DslDesign::ModelingToolboxItem(
						"ModelEntityToolToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						7, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("ModelEntityToolToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("ModelEntityToolToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.
						"Class DiagramsToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("Class DiagramsToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"ModelEntityTool", // F1 help keyword for the toolbox item.
						resourceManager.GetString("ModelEntityToolToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						CreateElementToolPrototype(store, global::Luminis.Its.Workbench.ModelEntity.DomainClassId), // ElementGroupPrototype (data object) representing model element on the toolbox.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require) 
						}));

					// Add EntityRelationConnector connector tool.
					toolboxItems.Add(new DslDesign::ModelingToolboxItem(
						"EntityRelationConnectorToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						8, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("EntityRelationConnectorToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("EntityRelationConnectorToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.				
						"Class DiagramsToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("Class DiagramsToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"EntityRelationConnector", // F1 help keyword for the toolbox item.
						resourceManager.GetString("EntityRelationConnectorToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						null, // Connector toolbox items do not have an underlying data object.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require), 
							new global::System.ComponentModel.ToolboxItemFilterAttribute(EntityRelationConnectorFilterString)
						}));

					// Add RelationEntityConnector connector tool.
					toolboxItems.Add(new DslDesign::ModelingToolboxItem(
						"RelationEntityConnectorToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						9, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("RelationEntityConnectorToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("RelationEntityConnectorToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.				
						"Class DiagramsToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("Class DiagramsToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"RelationEntityConnector", // F1 help keyword for the toolbox item.
						resourceManager.GetString("RelationEntityConnectorToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						null, // Connector toolbox items do not have an underlying data object.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require), 
							new global::System.ComponentModel.ToolboxItemFilterAttribute(RelationEntityConnectorFilterString)
						}));

					// Add CaseFileEntityTool shape tool.
					toolboxItems.Add(new DslDesign::ModelingToolboxItem(
						"CaseFileEntityToolToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						1, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("CaseFileEntityToolToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("CaseFileEntityToolToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.
						"WorkbenchToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("WorkbenchToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"CaseFileEntityTool", // F1 help keyword for the toolbox item.
						resourceManager.GetString("CaseFileEntityToolToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						CreateElementToolPrototype(store, global::Luminis.Its.Workbench.CaseFileEntity.DomainClassId), // ElementGroupPrototype (data object) representing model element on the toolbox.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require) 
						}));

					// Add CaseFileRelationTool shape tool.
					toolboxItems.Add(new DslDesign::ModelingToolboxItem(
						"CaseFileRelationToolToolboxItem", // Unique identifier (non-localized) for the toolbox item.
						2, // Position relative to other items in the same toolbox tab.
						resourceManager.GetString("CaseFileRelationToolToolboxItem", resourceCulture), // Localized display name for the item.
						(global::System.Drawing.Bitmap)DslDiagrams::ImageHelper.GetImage(resourceManager.GetObject("CaseFileRelationToolToolboxBitmap", resourceCulture)), // Image displayed next to the toolbox item.
						"WorkbenchToolboxTab", // Unique identifier (non-localized) for the toolbox item tab.
						resourceManager.GetString("WorkbenchToolboxTab", resourceCulture), // Localized display name for the toolbox tab.
						"CaseFileRelationTool", // F1 help keyword for the toolbox item.
						resourceManager.GetString("CaseFileRelationToolToolboxTooltip", resourceCulture), // Localized tooltip text for the toolbox item.
						CreateElementToolPrototype(store, global::Luminis.Its.Workbench.CaseFileRelation.DomainClassId), // ElementGroupPrototype (data object) representing model element on the toolbox.
						new global::System.ComponentModel.ToolboxItemFilterAttribute[] { // Collection of ToolboxItemFilterAttribute objects that determine visibility of the toolbox item.
							new global::System.ComponentModel.ToolboxItemFilterAttribute(ToolboxFilterString, global::System.ComponentModel.ToolboxItemFilterType.Require) 
						}));

					t.Rollback();
				}
			}

			return toolboxItems;
		}
		
		/// <summary>
		/// Creates an ElementGroupPrototype for the element tool corresponding to the given domain class id.
		/// Default behavior is to create a prototype containing an instance of the domain class.
		/// Derived classes may override this to add additional information to the prototype.
		/// </summary>
		protected virtual DslModeling::ElementGroupPrototype CreateElementToolPrototype(DslModeling::Store store, global::System.Guid domainClassId)
		{
			DslModeling::ModelElement element = store.ElementFactory.CreateElement(domainClassId);
			DslModeling::ElementGroup elementGroup = new DslModeling::ElementGroup(store.DefaultPartition);
			elementGroup.AddGraph(element, true);
			return elementGroup.CreatePrototype();
		}
	}
}
